(window.webpackJsonp=window.webpackJsonp||[]).push([["npm.secp256k1"],{2330:function(e,r,t){e.exports=t("3a89")(t("4673"))},"3a89":function(e,r){const t="Impossible case. Please create issue.",n="The tweak was out of range or the resulted private key is invalid",i="The tweak was out of range or equal to zero",o="Unknow error on context randomization",a="Private Key is invalid",c="Public Key could not be parsed",s="Public Key serialization error",u="The sum of the public keys is not valid",l="Signature could not be parsed",w="The nonce generation function failed, or the private key was invalid",y="Public key could not be recover",p="Scalar was invalid (zero or overflow)";function b(e,r){if(!e)throw new Error(r)}function d(e,r,t){if(b(r instanceof Uint8Array,`Expected ${e} to be an Uint8Array`),void 0!==t)if(Array.isArray(t)){const n=`Expected ${e} to be an Uint8Array with length [${t.join(", ")}]`;b(t.includes(r.length),n)}else{const n=`Expected ${e} to be an Uint8Array with length ${t}`;b(r.length===t,n)}}function f(e){b("Boolean"===g(e),"Expected compressed to be a Boolean")}function h(e=(e=>new Uint8Array(e)),r){return"function"==typeof e&&(e=e(r)),d("output",e,r),e}function g(e){return Object.prototype.toString.call(e).slice(8,-1)}e.exports=e=>({contextRandomize(r){switch(b(null===r||r instanceof Uint8Array,"Expected seed to be an Uint8Array or null"),null!==r&&d("seed",r,32),e.contextRandomize(r)){case 1:throw new Error(o)}},privateKeyVerify:r=>(d("private key",r,32),0===e.privateKeyVerify(r)),privateKeyNegate(r){switch(d("private key",r,32),e.privateKeyNegate(r)){case 0:return r;case 1:throw new Error(t)}},privateKeyTweakAdd(r,t){switch(d("private key",r,32),d("tweak",t,32),e.privateKeyTweakAdd(r,t)){case 0:return r;case 1:throw new Error(n)}},privateKeyTweakMul(r,t){switch(d("private key",r,32),d("tweak",t,32),e.privateKeyTweakMul(r,t)){case 0:return r;case 1:throw new Error(i)}},publicKeyVerify:r=>(d("public key",r,[33,65]),0===e.publicKeyVerify(r)),publicKeyCreate(r,t=!0,n){switch(d("private key",r,32),f(t),n=h(n,t?33:65),e.publicKeyCreate(n,r)){case 0:return n;case 1:throw new Error(a);case 2:throw new Error(s)}},publicKeyConvert(r,t=!0,n){switch(d("public key",r,[33,65]),f(t),n=h(n,t?33:65),e.publicKeyConvert(n,r)){case 0:return n;case 1:throw new Error(c);case 2:throw new Error(s)}},publicKeyNegate(r,n=!0,i){switch(d("public key",r,[33,65]),f(n),i=h(i,n?33:65),e.publicKeyNegate(i,r)){case 0:return i;case 1:throw new Error(c);case 2:throw new Error(t);case 3:throw new Error(s)}},publicKeyCombine(r,t=!0,n){b(Array.isArray(r),"Expected public keys to be an Array"),b(r.length>0,"Expected public keys array will have more than zero items");for(const e of r)d("public key",e,[33,65]);switch(f(t),n=h(n,t?33:65),e.publicKeyCombine(n,r)){case 0:return n;case 1:throw new Error(c);case 2:throw new Error(u);case 3:throw new Error(s)}},publicKeyTweakAdd(r,t,i=!0,o){switch(d("public key",r,[33,65]),d("tweak",t,32),f(i),o=h(o,i?33:65),e.publicKeyTweakAdd(o,r,t)){case 0:return o;case 1:throw new Error(c);case 2:throw new Error(n)}},publicKeyTweakMul(r,t,n=!0,o){switch(d("public key",r,[33,65]),d("tweak",t,32),f(n),o=h(o,n?33:65),e.publicKeyTweakMul(o,r,t)){case 0:return o;case 1:throw new Error(c);case 2:throw new Error(i)}},signatureNormalize(r){switch(d("signature",r,64),e.signatureNormalize(r)){case 0:return r;case 1:throw new Error(l)}},signatureExport(r,n){d("signature",r,64);const i={output:n=h(n,72),outputlen:72};switch(e.signatureExport(i,r)){case 0:return n.slice(0,i.outputlen);case 1:throw new Error(l);case 2:throw new Error(t)}},signatureImport(r,n){switch(d("signature",r),n=h(n,64),e.signatureImport(n,r)){case 0:return n;case 1:throw new Error(l);case 2:throw new Error(t)}},ecdsaSign(r,n,i={},o){d("message",r,32),d("private key",n,32),b("Object"===g(i),"Expected options to be an Object"),void 0!==i.data&&d("options.data",i.data),void 0!==i.noncefn&&b("Function"===g(i.noncefn),"Expected options.noncefn to be a Function");const a={signature:o=h(o,64),recid:null};switch(e.ecdsaSign(a,r,n,i.data,i.noncefn)){case 0:return a;case 1:throw new Error(w);case 2:throw new Error(t)}},ecdsaVerify(r,t,n){switch(d("signature",r,64),d("message",t,32),d("public key",n,[33,65]),e.ecdsaVerify(r,t,n)){case 0:return!0;case 3:return!1;case 1:throw new Error(l);case 2:throw new Error(c)}},ecdsaRecover(r,n,i,o=!0,a){switch(d("signature",r,64),b("Number"===g(n)&&n>=0&&n<=3,"Expected recovery id to be a Number within interval [0, 3]"),d("message",i,32),f(o),a=h(a,o?33:65),e.ecdsaRecover(a,r,n,i)){case 0:return a;case 1:throw new Error(l);case 2:throw new Error(y);case 3:throw new Error(t)}},ecdh(r,t,n={},i){switch(d("public key",r,[33,65]),d("private key",t,32),b("Object"===g(n),"Expected options to be an Object"),void 0!==n.data&&d("options.data",n.data),void 0!==n.hashfn?(b("Function"===g(n.hashfn),"Expected options.hashfn to be a Function"),void 0!==n.xbuf&&d("options.xbuf",n.xbuf,32),void 0!==n.ybuf&&d("options.ybuf",n.ybuf,32),d("output",i)):i=h(i,32),e.ecdh(i,r,t,n.data,n.hashfn,n.xbuf,n.ybuf)){case 0:return i;case 1:throw new Error(c);case 2:throw new Error(p)}}})},4673:function(e,r,t){const n=new(0,t("3337").ec)("secp256k1"),i=n.curve,o=i.n.constructor;function a(e){const r=e[0];switch(r){case 2:case 3:return 33!==e.length?null:function(e,r){let t=new o(r);if(t.cmp(i.p)>=0)return null;t=t.toRed(i.red);let a=t.redSqr().redIMul(t).redIAdd(i.b).redSqrt();return 3===e!==a.isOdd()&&(a=a.redNeg()),n.keyPair({pub:{x:t,y:a}})}(r,e.subarray(1,33));case 4:case 6:case 7:return 65!==e.length?null:function(e,r,t){let a=new o(r),c=new o(t);if(a.cmp(i.p)>=0||c.cmp(i.p)>=0)return null;if(a=a.toRed(i.red),c=c.toRed(i.red),(6===e||7===e)&&c.isOdd()!==(7===e))return null;const s=a.redSqr().redIMul(a);return c.redSqr().redISub(s.redIAdd(i.b)).isZero()?n.keyPair({pub:{x:a,y:c}}):null}(r,e.subarray(1,33),e.subarray(33,65));default:return null}}function c(e,r){const t=r.encode(null,33===e.length);for(let r=0;r<e.length;++r)e[r]=t[r]}e.exports={contextRandomize:()=>0,privateKeyVerify(e){const r=new o(e);return r.cmp(i.n)<0&&!r.isZero()?0:1},privateKeyNegate(e){const r=new o(e),t=i.n.sub(r).umod(i.n).toArrayLike(Uint8Array,"be",32);return e.set(t),0},privateKeyTweakAdd(e,r){const t=new o(r);if(t.cmp(i.n)>=0)return 1;if(t.iadd(new o(e)),t.cmp(i.n)>=0&&t.isub(i.n),t.isZero())return 1;const n=t.toArrayLike(Uint8Array,"be",32);return e.set(n),0},privateKeyTweakMul(e,r){let t=new o(r);if(t.cmp(i.n)>=0||t.isZero())return 1;t.imul(new o(e)),t.cmp(i.n)>=0&&(t=t.umod(i.n));const n=t.toArrayLike(Uint8Array,"be",32);return e.set(n),0},publicKeyVerify:e=>null===a(e)?1:0,publicKeyCreate(e,r){const t=new o(r);if(t.cmp(i.n)>=0||t.isZero())return 1;return c(e,n.keyFromPrivate(r).getPublic()),0},publicKeyConvert(e,r){const t=a(r);if(null===t)return 1;return c(e,t.getPublic()),0},publicKeyNegate(e,r){const t=a(r);if(null===t)return 1;const n=t.getPublic();return n.y=n.y.redNeg(),c(e,n),0},publicKeyCombine(e,r){const t=new Array(r.length);for(let e=0;e<r.length;++e)if(t[e]=a(r[e]),null===t[e])return 1;let n=t[0].getPublic();for(let e=1;e<t.length;++e)n=n.add(t[e].pub);return n.isInfinity()?2:(c(e,n),0)},publicKeyTweakAdd(e,r,t){const n=a(r);if(null===n)return 1;if((t=new o(t)).cmp(i.n)>=0)return 2;const s=n.getPublic().add(i.g.mul(t));return s.isInfinity()?2:(c(e,s),0)},publicKeyTweakMul(e,r,t){const n=a(r);if(null===n)return 1;if((t=new o(t)).cmp(i.n)>=0||t.isZero())return 2;return c(e,n.getPublic().mul(t)),0},signatureNormalize(e){const r=new o(e.subarray(0,32)),t=new o(e.subarray(32,64));return r.cmp(i.n)>=0||t.cmp(i.n)>=0?1:(1===t.cmp(n.nh)&&e.set(i.n.sub(t).toArrayLike(Uint8Array,"be",32),32),0)},signatureExport(e,r){const t=r.subarray(0,32),n=r.subarray(32,64);if(new o(t).cmp(i.n)>=0)return 1;if(new o(n).cmp(i.n)>=0)return 1;const{output:a}=e;let c=a.subarray(4,37);c[0]=0,c.set(t,1);let s=33,u=0;for(;s>1&&0===c[u]&&!(128&c[u+1]);--s,++u);if(c=c.subarray(u),128&c[0])return 1;if(s>1&&0===c[0]&&!(128&c[1]))return 1;let l=a.subarray(39,72);l[0]=0,l.set(n,1);let w=33,y=0;for(;w>1&&0===l[y]&&!(128&l[y+1]);--w,++y);return l=l.subarray(y),128&l[0]||w>1&&0===l[0]&&!(128&l[1])?1:(e.outputlen=6+s+w,a[0]=48,a[1]=e.outputlen-2,a[2]=2,a[3]=c.length,a.set(c,4),a[4+s]=2,a[5+s]=l.length,a.set(l,6+s),0)},signatureImport(e,r){if(r.length<8)return 1;if(r.length>72)return 1;if(48!==r[0])return 1;if(r[1]!==r.length-2)return 1;if(2!==r[2])return 1;const t=r[3];if(0===t)return 1;if(5+t>=r.length)return 1;if(2!==r[4+t])return 1;const n=r[5+t];if(0===n)return 1;if(6+t+n!==r.length)return 1;if(128&r[4])return 1;if(t>1&&0===r[4]&&!(128&r[5]))return 1;if(128&r[t+6])return 1;if(n>1&&0===r[t+6]&&!(128&r[t+7]))return 1;let a=r.subarray(4,4+t);if(33===a.length&&0===a[0]&&(a=a.subarray(1)),a.length>32)return 1;let c=r.subarray(6+t);if(33===c.length&&0===c[0]&&(c=c.slice(1)),c.length>32)throw new Error("S length is too long");let s=new o(a);s.cmp(i.n)>=0&&(s=new o(0));let u=new o(r.subarray(6+t));return u.cmp(i.n)>=0&&(u=new o(0)),e.set(s.toArrayLike(Uint8Array,"be",32),0),e.set(u.toArrayLike(Uint8Array,"be",32),32),0},ecdsaSign(e,r,t,a,c){if(c){const e=c;c=n=>{const i=e(r,t,null,a,n);if(!(i instanceof Uint8Array&&32===i.length))throw new Error("This is the way");return new o(i)}}const s=new o(t);if(s.cmp(i.n)>=0||s.isZero())return 1;let u;try{u=n.sign(r,t,{canonical:!0,k:c,pers:a})}catch(e){return 1}return e.signature.set(u.r.toArrayLike(Uint8Array,"be",32),0),e.signature.set(u.s.toArrayLike(Uint8Array,"be",32),32),e.recid=u.recoveryParam,0},ecdsaVerify(e,r,t){const c={r:e.subarray(0,32),s:e.subarray(32,64)},s=new o(c.r),u=new o(c.s);if(s.cmp(i.n)>=0||u.cmp(i.n)>=0)return 1;if(1===u.cmp(n.nh)||s.isZero()||u.isZero())return 3;const l=a(t);if(null===l)return 2;const w=l.getPublic();return n.verify(r,c,w)?0:3},ecdsaRecover(e,r,t,a){const s={r:r.slice(0,32),s:r.slice(32,64)},u=new o(s.r),l=new o(s.s);if(u.cmp(i.n)>=0||l.cmp(i.n)>=0)return 1;if(u.isZero()||l.isZero())return 2;let w;try{w=n.recoverPubKey(a,s,t)}catch(e){return 2}return c(e,w),0},ecdh(e,r,t,c,s,u,l){const w=a(r);if(null===w)return 1;const y=new o(t);if(y.cmp(i.n)>=0||y.isZero())return 2;const p=w.getPublic().mul(y);if(void 0===s){const r=p.encode(null,!0),t=n.hash().update(r).digest();for(let r=0;r<32;++r)e[r]=t[r]}else{u||(u=new Uint8Array(32));const r=p.getX().toArray("be",32);for(let e=0;e<32;++e)u[e]=r[e];l||(l=new Uint8Array(32));const t=p.getY().toArray("be",32);for(let e=0;e<32;++e)l[e]=t[e];const n=s(u,l,c);if(!(n instanceof Uint8Array&&n.length===e.length))return 2;e.set(n)}return 0}}}}]);